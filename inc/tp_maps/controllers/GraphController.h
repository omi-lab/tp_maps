#pragma once

#include "tp_maps/Controller.h"

#include "tp_utils/CallbackCollection.h"

namespace tp_maps
{

//##################################################################################################
class TP_MAPS_EXPORT GraphController : public Controller
{
  TP_DQ;
public:
  //################################################################################################
  GraphController(Map* map);

  //################################################################################################
  glm::dvec3 focalPoint() const;

  //################################################################################################
  void setFocalPoint(const glm::dvec3& focalPoint);

  //################################################################################################
  double limitFocalPointMinX() const;

  //################################################################################################
  double limitFocalPointMaxX() const;

  //################################################################################################
  void setLimitFocalPointX(double minX, double maxX) const;

  //################################################################################################
  double limitFocalPointMinY() const;

  //################################################################################################
  double limitFocalPointMaxY() const;

  //################################################################################################
  void setLimitFocalPointY(double minY, double maxY) const;

  //################################################################################################
  bool allowTranslation() const;

  //################################################################################################
  void setAllowTranslation(bool allowTranslation);

  //################################################################################################
  bool allowZoom() const;

  //################################################################################################
  void setAllowZoom(bool allowZoom);

  //################################################################################################
  double rotationFactor() const;

  //################################################################################################
  void setRotationFactor(double rotationFactor);

  //################################################################################################
  double distanceX() const;

  //################################################################################################
  void setDistanceX(double distanceX);

  //################################################################################################
  double distanceY() const;

  //################################################################################################
  void setDistanceY(double distanceY);

  //################################################################################################
  void setLimitDistanceX(double limitDistanceMinX, double limitDistanceMaxX) const;

  //################################################################################################
  double limitDistanceMinX() const;

  //################################################################################################
  double limitDistanceMaxX() const;

  //################################################################################################
  void setLimitDistanceY(double limitDistanceMinY, double limitDistanceMaxY) const;

  //################################################################################################
  double limitDistanceMinY() const;

  //################################################################################################
  double limitDistanceMaxY() const;


  //################################################################################################
  bool ignoreAspectRatio() const;

  //################################################################################################
  void setIgnoreAspectRatio(bool ignoreAspectRatio);

  //################################################################################################
  void saveState(nlohmann::json& j) const override;

  //################################################################################################
  void loadState(const nlohmann::json& j) override;

  //################################################################################################
  tp_utils::CallbackCollection<void()> focalPointParametersChanged;

protected:
  //################################################################################################
  ~GraphController() override;

  //################################################################################################
   void mapResized(int w, int h) override;

  //################################################################################################
  void updateMatrices() override;

  //################################################################################################
  bool mouseEvent(const MouseEvent& event) override;

  //################################################################################################
  virtual void translate(double dx, double dy, double msSincePrevious);

  //################################################################################################
  virtual void translateInteractionStarted();

  //################################################################################################
  virtual void translateInteractionFinished();

  //################################################################################################
  virtual void zoomPerformed();
};

}

